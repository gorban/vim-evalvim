*evalvim.txt*  Plugin to eval vim script.

Author:  Maxim Kim <habamax@gmail.com>
URL:     https://github.com/habamax/vim-evalvim
License: MIT

================================================================================

Why do you need it?

Well, most probably you don't need this plugin. ;)

I find it useful for:

	* making other vim plugins -- write vimscript anywhere, eval it, see the
	  result;
	* check vimrc settings or plugin settings I do occasionally install.


MAPPINGS                                                    *evalvim-mappings*

gy                                                                *evalvim-gy*
'gy' in normal mode is an operator. It starts |operator-pending-mode| where
you can specify a motion to evaluate with.

'gy' in visual mode evaluates selection.


gyy                                                              *evalvim-gyy*
Evaluate current vimscript line.

Put the cursor on the next line:

	let g:my_variable = 100

press 'gyy' to evaluate it. As a result you will have 'g:my_variable' created
with '100' assigned. Now evaluate the next line with 'gyy':

	echo "g:my_variable is equal to ".g:my_variable

you should see "g:my_variable is equal to 100" at the bottom of your vim
window.


gyap                                                            *evalvim-gyap*
Evaluate current vimscript paragraph.

Put the cursor somewhere in the function

	fun! HelloFunc()
		:smile
	endfu

press 'gyap' to evaluate it. As a result you will have 'HelloFunc' created.
To call it, either run the command from |Cmdline|, or evaluate with 'gyy':

	:call HelloFunc()

you should see smile generated by vim.

Now go change the function and re-evaluate it. :)

This kind of stuff (function re-evaluation) is more convenient together with
vim function text object provided by:

	https://github.com/kana/vim-textobj-user
	https://github.com/kana/vim-textobj-function

using it you will be able to eval vim functions with 'gyaf'.


PLUGS                                                          *evalvim-plugs*
Default mapping is |gy|

One can remap it to something else using following <Plug>s:

	xmap ge  <Plug>(EvalVim)
	nmap ge  <Plug>(EvalVim)
	omap ge  <Plug>(EvalVim)
	nmap gee <Plug>(EvalVimLine)

NOTE: ge is one of vim's default mappings.


SETTINGS                                                    *evalvim-settings*

*g:evalvim_capture-output* (0/1)
	Whether to capture the output of evaluation to '*' register.
	0 - no
	1 - yes

	Default: 1.


vim:tw=78:ts=4:ft=help:
